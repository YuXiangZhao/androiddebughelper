apply plugin: 'groovy'
repositories {
    jcenter()
    google()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
}

dependencies {
    compile 'com.android.tools.build:gradle:3.5.0'
    //compile 'com.android.tools.build:builder:3.1.0'
}

task generateBuildConfig {
        File buildConfigDir = new File(buildDir, "buildConfig")
        File buildConfigFile = new File(buildConfigDir, "com/yy/android/gradle/debug/BuildConfig.java")
    doFirst {
        buildConfigFile.parentFile.mkdirs()
        if (buildConfigFile.exists()) buildConfigFile.delete()
        buildConfigFile.createNewFile()

        Properties properties = new Properties()
        properties.load(new File(projectDir, '../gradle.properties').newDataInputStream())
        def version = properties.getProperty('version')
        def group = properties.getProperty('group')
        def name = properties.getProperty('artifactName')

        println("${group}:${name}:${version}")

        def pw = buildConfigFile.newPrintWriter()

        pw.println """/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated
 * It should not be modified by hand.
 */
package com.yy.android.gradle.debug;

public final class BuildConfig {
"""
        pw.println("    public static final String GROUP = \"${group}\"; ")
        pw.println("    public static final String NAME = \"${name}\"; ")
        pw.println("    public static final String VERSION = \"${version}\"; ")
        pw.println '}'
        pw.flush()
        pw.close()
    }

    sourceSets.main.java.srcDirs += buildConfigDir
}

tasks.withType(JavaCompile) { compileTask ->
    compileTask.dependsOn generateBuildConfig
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

